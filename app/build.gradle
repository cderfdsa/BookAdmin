apply plugin: 'com.android.application'

def keystoreFilepath = ''
def keystorePSW = ''
def keystoreAlias = ''
def keystoreAliasPSW = ''
// default keystore file, PLZ config file path in local.properties
def keyfile = file('keystore.path')
def isExists = ''

Properties properties = new Properties()
// local.properties file in the root director keystore.path
properties.load(project.rootProject.file('local.properties').newDataInputStream())
keystoreFilepath = properties.getProperty("keystore.path")

if (keystoreFilepath) {
    keystorePSW = properties.getProperty("keystore.password")
    keystoreAlias = properties.getProperty("keystore.alias")
    keystoreAliasPSW = properties.getProperty("keystore.alias_password")
    keyfile = file(keystoreFilepath)
}

android {
    //配置签名信息
    signingConfigs {
        release {
            keyAlias keystoreAlias//签名的别名
            keyPassword keystoreAliasPSW//密码
            storeFile keyfile//签名文件的路径
            storePassword keystorePSW//签名密码
        }
    }
    //设置APK包的相关属性
    packagingOptions{
        exclude '*.apk'
    }
    dexOptions {
        jumboMode true
        incremental false
    }
    lintOptions{
        abortOnError false
    }
    //设置编译时用的Android版本
    compileSdkVersion 25
    //设置编译时使用的构建工具的版本
    buildToolsVersion "25.0.3"
    //设置一些默认属性，其可用属性是buildTypes和ProductFlavors之和
    defaultConfig {
        applicationId "com.example.bookadmin"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName '1.0.3'
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        signingConfig signingConfigs.release
    }
    //配置构建类型，可打出不同类型的包，默认有debug和release两种，你还可以在增加N种
    buildTypes {
        release {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //混淆
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            //前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
            if (keyfile.exists()) {
                println("WITH -> buildTypes -> release: using jks key")
                signingConfig signingConfigs.release
                isExists = 'jkskey'
            } else {
                println("WITH -> buildTypes -> release: using default key")
                isExists = 'defaultkey'
            }
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // 输出apk名称为ruijie_v1.0_wandoujia.apk
                        def fileName = "bookAdmin_im_${isExists}_${defaultConfig.versionName}_${variant.productFlavors[0].name}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
            //设置签名信息
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.release
        }
    }
    //配置不同风格的APP，在buildTypes的基础上还可以让每一个类型的APP拥有不同的风格，所以最终打出的APK的数量就是buildTypes乘以productFlavors
    productFlavors {
        //新增渠道staging，表示调试阶段的发布
        staging {
            minSdkVersion 19
            applicationId 'com.example.bookadmin'
            signingConfig signingConfigs.release
            targetSdkVersion 25
            testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
            versionCode 1
            versionName '1.0.3'
        }
        //新增渠道production，表示产品发布阶段的发布
//        production {
//            minSdkVersion 19
//            applicationId 'com.example.bookadmin'
//            signingConfig signingConfigs.release
//            targetSdkVersion 25
//            testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
//            versionCode 1
//            versionName '1.0.3'
//        }
        //其他不同apk市场渠道添加，类似...
    }
}

repositories{
    flatDir{
        dirs 'libs'
    }
//    jcenter()
//    mavenCentral()  // GPUImage for Android
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
    //        exclude group: 'com.android.support', module: 'support-annotations'
    //    })
    testCompile 'junit:junit:4.12'
    //    compile 'com.android.support:multidex:'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.squareup.okhttp3:okhttp:3.7.0'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.facebook.fresco:fresco:0.6.0'
    //    compile 'de.greenrobot:eventbus:3.0.0-beta1'
    compile 'com.cjj.materialrefeshlayout:library:1.3.0'
    //    compile 'de.hdodenhof:circleimageview:1.3.0'
    compile 'com.github.d-max:spots-dialog:0.7'
    compile name: 'SMSSDK-2.1.4', ext: 'aar'
    compile 'com.jiechic.library:xUtils:2.6.14'
    compile 'jp.wasabeef:fresco-processors:2.1.0'
    compile 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.3.0'
    //    compile 'com.google.firebase:firebase-core:9.0.0'
    //    compile 'com.google.firebase:firebase-messaging:9.0.0'
    compile project(':imsdk')
    compile project(':ui')
    compile project(':amapsdk')
}
